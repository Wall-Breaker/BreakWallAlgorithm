class Solution {
    public int[] searchRange(int[] nums, int target) {
        int left = left(nums,target);
        int right = right(nums,target);
        return new int[]{left,right};

    }

    public int left(int[] nums,int target){
        int left = 0;
        int right = nums.length - 1;
        while(left <= right){
            int mid = left + (right - left)/2;
            if(nums[mid] == target){
                right = mid - 1;
            } else if(nums[mid] > target) {
                right = mid - 1;
            } else {
                left =  mid + 1;
            }
        }
        if(left < 0 || left > nums.length - 1){
            return -1;
        }
        return nums[left] == target ? left:-1;
    }

    public int right(int[] nums,int target){
        int left = 0;
        int right = nums.length - 1;
        while(left <= right){
            int mid = left + (right - left)/2;
            if(nums[mid] == target){
                left = mid + 1;
            } else if(nums[mid] > target) {
                right = mid - 1;
            } else {
                left =  mid + 1;
            }
        }
        if(right < 0 || right > nums.length - 1){
            return -1;
        }
        return nums[right] == target ? right:-1;
    }
}